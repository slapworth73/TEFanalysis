%% Compare simulations to S pombe NETseq for Paf1 KO

%model_names.mat;
%model_complexities.mat;
%Remove negative values
%%

% X is the cluster you are finding the best-fit model and parameters for

for i=1:size(X_ub,1)
    X_ub(i,X_ub(i,:)<0)=0;
end

%Bin raw data
LARGE_X_TOTAL_Binned = zeros(size(X_ub,1),100);
for n=1:100
    LARGE_X_TOTAL_Binned(:,n)=sum(X_ub(:,1+(n-1)*10:n*10),2);
end
LARGE_X_TOTAL_Norm=bsxfun(@rdivide,LARGE_X_TOTAL_Binned,sum(LARGE_X_TOTAL_Binned,2));

LARGE_X_TOTAL_BinnedCumsum = cumsum(LARGE_X_TOTAL_Norm,2);

LARGE_X_TOTAL_likelihoodsBinned = cell(size(model_names));

LARGE_X_TOTAL_GeneParamsBinned = cell(size(model_names));

LARGE_X_TOTAL_BestFitBinned = cell(size(model_names));


no_readPenalty = 1000;

for m=1:length(model_names)
    tic;
    model_dir = strcat('/media/chri4777/Elements/TOM_BROWN/NETSeq_simulator/',model_names{m});
    cd(model_dir);
    try
        load all_PolIIDistsBinned;
%         load model_parameterNames;
%         load moving_polIIDists;
        load parameter_values;
        
        all_PolIIDistsBinned=bsxfun(@rdivide,all_PolIIDistsBinned,sum(all_PolIIDistsBinned,2));
        all_PolIIDistsBinned(isnan(all_PolIIDistsBinned))=-Inf;
        LARGE_X_TOTAL_likelihoodsBinned{m} = zeros(size(LARGE_X_TOTAL_Binned,1),1);
        LARGE_X_TOTAL_GeneParamsBinned{m} = zeros(size(LARGE_X_TOTAL_Binned,1),size(parameter_values,2));
        LARGE_X_TOTAL_BestFitBinned{m} = zeros(size(LARGE_X_TOTAL_Binned,1),125);
        all_PolIIDistsBinnedcumsum = cumsum(all_PolIIDistsBinned(:,26:125),2);
        
        for gene=1:size(LARGE_X_TOTAL_Binned,1)    
            
            CDF_diffs = bsxfun(@minus,all_PolIIDistsBinnedcumsum,LARGE_X_TOTAL_BinnedCumsum(gene,:));
            KS_stat = max(abs(CDF_diffs),[],2);
            [~,ks_idx] = min(KS_stat);
            
            likelihood_vec = LARGE_X_TOTAL_Binned(gene,:).*log(all_PolIIDistsBinned(ks_idx,26:125));
            likelihood_vec(isnan(likelihood_vec))=0;
            num_inf = sum(isinf(likelihood_vec));
            likelihood_vec(isinf(likelihood_vec))=0;
            max_likelihood = sum(likelihood_vec)-(num_inf*no_readPenalty);
            
            LARGE_X_TOTAL_likelihoodsBinned{m}(gene)=max_likelihood;
            LARGE_X_TOTAL_GeneParamsBinned{m}(gene,:) = parameter_values(ks_idx,:);
            LARGE_X_TOTAL_BestFitBinned{m}(gene,:) = all_PolIIDistsBinned(ks_idx,:);
            
        end
    end
    cd('/home/chri4777/Downloads');
    save('LARGE_X_TOTAL_likelihoodsBinned.mat','LARGE_X_TOTAL_likelihoodsBinned');
    save('LARGE_X_TOTAL_GeneParamsBinned.mat','LARGE_X_TOTAL_GeneParamsBinned');
    save('LARGE_X_TOTAL_BestFitBinned.mat','LARGE_X_TOTAL_BestFitBinned');
    disp(m);
    toc
end

%%

LARGE_X_TOTAL_BIC=zeros(length(model_names),1);
for m=1:length(model_names)
    LARGE_X_TOTAL_BIC(m,1) = log(size(LARGE_X_TOTAL_likelihoodsBinned{m},1))*model_complexities{m} - 2*sum(LARGE_X_TOTAL_likelihoodsBinned{m});
end

figure();
plot(1:length(LARGE_X_TOTAL_BIC),LARGE_X_TOTAL_BIC,'bx','markersize',20);
ylabel('Bayesian Information Criteria','fontsize',24);
title('X NETseq Model Fits','fontsize',24);
ax=gca;
ax.XTick=1:length(LARGE_X_TOTAL_BIC);
ax.XTickLabel=model_names;
% xtickangle(45);

LARGE_X_TOTAL_BIC(find(isinf(LARGE_X_TOTAL_BIC)))=nan;
% This outputs the best-fit model for the data
[~,LARGE_X_model] = min(LARGE_X_TOTAL_BIC)

%%
figure();
hold on;
plot(26:125,nanmean(bsxfun(@rdivide,LARGE_X_TOTAL_Binned(1:gene-1,:),sum(LARGE_X_TOTAL_Binned(1:gene-1,:),2)),1),'c','linewidth',10);
plot(mean(LARGE_X_TOTAL_BestFitBinned{LARGE_X_model}(1:gene-1,:),1),'k','linewidth',5);
title('Metagene profiles of best simulated fits, LARGE X NETseq','fontsize',20);
ylabel('Mean simulated LARGE X NETseq reads (AU)','fontsize', 8);
% xlim([1 125]);
ax=gca;
% ax.XTick=[1 25 75 120];
% ax.XTickLabel={'-250','TSS','+500','+1,000'};
ax.FontSize=16;

